name: CI/CD for ECS and ECR

on:
  push:
    paths:
      - 'backend_rds/**'

jobs:
  build-and-deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: main-esc-cluster
      SERVICE_NAME: backend-rds-service  # More descriptive service name
      AWS_REGION: eu-central-1
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

    steps:
      - name: Install AWS CLI
      - run: |
          - sudo apt-get update
          - sudo apt-get install -y awscli

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}  # Use the env variable

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Docker image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/repo/rds:${{ github.sha }} -f backend_rds/Dockerfile backend_rds 
          docker push ${{ steps.login-ecr.outputs.registry }}/repo/rds:${{ github.sha }}

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster ${{ env.CLUSTER_NAME }} \
            --service ${{ env.SERVICE_NAME }} \
            --force-new-deployment \
            aws ecs update-service --cluster $CLUSTER_NAME --service $RDS_SERVICE_NAME --force-new-deployment --container-image-overrides containerName=$RDS_SERVICE_NAME,image=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:${{ github.sha }}